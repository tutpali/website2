---
import type { Clinic } from '../lib/supabase';

interface Props {
  clinic: Clinic;
}

const { clinic } = Astro.props;

// Format rating as a number
const rating = parseFloat(clinic.Rating);
const fullStars = Math.floor(rating);
const hasHalfStar = rating % 1 >= 0.5;
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
  <!-- Clinic Header -->
  <div class="p-6 border-b border-gray-100">
    <div class="flex items-start justify-between">
      <div class="flex-1">
        <h3 class="text-xl font-heading font-bold text-gray-900 mb-2 group-hover:text-primary-600 transition-colors">
        <h3 class="text-xl font-heading font-bold text-gray-900 mb-2 group-hover:text-red-600 transition-colors">
          <a href={`/clinic/${clinic.Id}`} class="hover:underline">
            {clinic.Name}
          </a>
        </h3>
        <div class="flex items-center text-gray-600 mb-2">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          <span class="text-sm">{clinic.City}, {clinic.State}</span>
        </div>
        <p class="text-gray-600 text-sm">{clinic.Address}</p>
      </div>
      
      <!-- Rating -->
      <div class="flex flex-col items-end">
        <div class="flex items-center mb-1">
          {Array.from({ length: fullStars }, (_, i) => (
            <svg key={i} class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
          ))}
          {hasHalfStar && (
            <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77V2z"/>
            </svg>
          )}
          {Array.from({ length: 5 - fullStars - (hasHalfStar ? 1 : 0) }, (_, i) => (
            <svg key={i} class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
          ))}
        </div>
        <span class="text-sm font-medium text-gray-900">{clinic.Rating}</span>
      </div>
    </div>
  </div>

  <!-- Contact Info -->
  <div class="p-6 space-y-3">
    <!-- Phone -->
    <div class="flex items-center text-gray-600">
      <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
      </svg>
      <a href={`tel:${clinic.Phone}`} class="hover:text-primary-600 transition-colors">
        {clinic.Phone}
      </a>
    </div>

    <!-- Website -->
    {clinic.Website && (
      <div class="flex items-center text-gray-600">
        <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
        </svg>
        <a href={clinic.Website} target="_blank" rel="noopener noreferrer" class="hover:text-primary-600 transition-colors truncate">
          Visit Website
        </a>
      </div>
    )}

    <!-- Hours -->
    <div class="flex items-center text-gray-600">
      <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <span class="text-sm">{clinic.Monday?.split(': ')[1] || 'See details'}</span>
    </div>
  </div>

  <!-- Action Buttons -->
  <div class="p-6 pt-0 flex space-x-3">
    <a
      href={`/clinic/${clinic.Id}`}
      class="flex-1 bg-red-500 text-white text-center py-2 px-4 rounded-lg hover:bg-red-600 transition-colors font-medium"
    >
      View Details
    </a>
    <a
      href={`https://maps.google.com?q=${encodeURIComponent(clinic.Address)}`}
      target="_blank"
      rel="noopener noreferrer"
      class="bg-gray-100 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors font-medium"
    >
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
      </svg>
    </a>
  </div>
</div>